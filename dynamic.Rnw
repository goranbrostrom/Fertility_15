\documentclass[a4paper,11pt]{article}

\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{natbib}

\usepackage[figuresonly]{endfloat}

\bibliographystyle{apalike}

\title{Repeated events and dynamic covariates,\\ Part I}
\author{Göran Broström}
\date{January 28, 2015}

\begin{document}

\maketitle

\begin{abstract}
Ways of analyzing fertility data (or more generally, repeated events data)
are discussed. It is assumed that the fertility histories of women are
collected in a dynamic way, following each woman from birth to death and
noting the exact dates of her deliveries.  
\end{abstract}

\tableofcontents

\section{Introduction}

<<setup, include = FALSE>>=
library(knitr)
opts_chunk$set(cache=TRUE,echo=FALSE,message=FALSE)##$
@

Ways of analyzing fertility data (or more generally, repeated events data)
are discussed. It is assumed that the fertility histories of women are
collected in a dynamic way, following each woman from birth to death and
noting the exact dates of her deliveries, and information of each in terms
of sex of child, stillbirth, mother's civil status, socioeconomic status,  
etc. Further, links to each mother's husband (if married) and parents are
normally present, which will allow us to identify siblings and and other
relatives, which may be relevant in modeling family dependencies in
fertility ``behaviour''. 

But on this first occasion I will discuss the concept of \emph{dynamic
covariates} in the context of Cox regression with repeated events, by
illustrating it by looking at real fertility data and by simulation.  

\section{Data}

The data set we use for illustration is taken from the DDB, Skellefteå
data. Women born 1821--1870 are followed over their fertility and presence
period, that is, from age 15 until age 49 or death or out-migration,
whichever comes first. Their exact age at deliveries are recorded, as well
as their birthdate and civil status. Multiple births (twins) may complicate
the picture I want to paint, so we will for now exclude all mothers who
experience a multiple birth. 

The raw data set is saved in a file named 'fert.rda'. The extension '.rda'
signals that the data format is the R 'native' data format.  


<<loading,results='asis',message=FALSE>>=
library(knitr)
library(xtable)
con <- url("http://ehar.se/data/fert.rda")
load(con)
close(con)
fert$parity <- as.integer(fert$parity)
fert$event <- as.integer(fert$event)
x <- head(fert[, c("id", "birthdate", "parity", "enter",
                   "exit", "event", "civst", "ch.id")])
xtable(x, digits = 3)
@


  
{\bf load} is the command to load a data file into the 'work space' of
{\bf R}. {\bf xtable} is a function in the library \emph{xtable}, and {\bf
  head} is a 
function that returns a few (\emph{six} by default) lines from the top ('head')
of a data frame. {\bf xtable} 'pretty-prints' the output (a matrix). 

The variables are: {\bf id} is the DDB identification number, in this case
for the mother. The data frame is organized by births for each woman and
each row gives the start age (\emph{enter}) and stop age (\emph{exit}) for
a time 
interval between two births. Exceptions are the first and last intervals
for each woman: the first interval starts at age 15 (approximately), and
the last interval ends at age 50 (with no birth), or earlier, if the woman
died or in some other way was lost to follow-up (we call it
\emph{censoring}).    

For example, the woman with id \Sexpr{x[1, 1]} is represented by five
records (rows) in the data frame (that is what the variable {\bf antrec}
says). In the first record, the variable {\bf parity} is zero, signifying
that during this age interval ({\bf enter} to {\bf exit}), she has no
children. At age  
\Sexpr{round(x[1, 5], digits = 3)} she gives birth to a boy (seen in two
ways, {\bf event} = 1 and {\bf sex = man}) with the DDB id ({\bf ch.id})
\Sexpr{x[1, 8]}. 

The variable {\bf event} takes three values, 0 = censoring, 1 = birth of a
boy, and 2 = birth of a girl. I have removed all mothers with
multiple births (twins, etc.), and also all mothers that come in (to
Skellefteå) late (after age 15), as well as all mothers with too short
intervals (less than nine  months) between births. All in all, we lose
about five per cent of all mothers in this way. All this is done in order
to avoid trivial complications when I illustrate the simple ideas in the
analysis. 

The variable {\bf birthdate} refers to \emph{mother's} birthdate, and the
sample is (essentially) all women born between January 1, 1820 and December
31, 1869. Note that birthdate is given in \emph{decimal} form, where the
decimal part is a fraction of a year. Dates are otherwise given in the form
'yyyymmdd' in the original DDB files, and there are two functions in the
{\bf eha} package \citep{eha,ehar12} that transforms back and forth between
the two formats.  

<<dates,echo=TRUE>>=
library(eha)
toDate(1867.669)
toTime("1867-09-02")
library(skum)
tillTid(18670902)
@

And, as we see at the end, the function {\bf tillTid} in the package
{\bf skum}. The reason for having dates as numeric is of course that it
makes mathematics involving dates easy. 

\section{The counting process approach}

We define 

\begin{equation}
\{N_i(t), 15 \le t \le 50\}, \quad i \in \text{mother's id}
\end{equation}

as the \emph{number of births before and including age $t$} for woman No.\
$i$. By age we mean \emph{exact age}, measured by a precision of a day, but with
\emph{time unit year}. Thus $N_i$ are \emph{counting processes} with jumps of size
one (remember, no twin births) at the age of the mother at deliveries. For
mother No. $160$ it looks like this (with the code producing the figure);
see Figure~\ref{fig:countbir}. 

<<countbir, fig.cap="Counting the number of births for mother with id = 160.">>=
source("R/plotid.R")
plotid(fert, 160)
@

$N(t)$ is a \emph{right-continuous} function, meaning essentially that at
jump points, the value is the larger of the two possible values. $N(t-)$
denotes its \emph{left-continuous} counterpart, that is, it is defined as the
number of births up to but \emph{not including} age $t$. 

\subsection{External covariates}

If the \emph{intensity function} of $N$ only depends on \emph{external
  covariates}, then $N$ is a \emph{Poisson process}, implying that the
intensity at time $t$ is independent of previous events in the process, in
particular of $N(t-)$ and time since last birth.  It could look like this: 
\begin{equation}
h(t; x) = h_0(t) \exp(\beta x), \quad 0 \le t \le 50,
\end{equation}
with $x$ being an external covariate, for instance {\bf birthdate} in our
example. This is a \emph{proportional hazards model} \citep{cox72} and it is
easily estimated with any software capable of fitting a Cox regression
model with data being \emph{left truncatated}. In {\bf R}, we can use the
{\bf coxreg} function in the \emph{eha} package, which essentially is a
wrapper for the {\bf coxph} function in the \emph{survival} package 
\citep{survival,extcox00}. 

<<introcox,results='asis'>>=
library(eha)
fit <- coxreg(Surv(enter, exit, event > 0.5) ~ birthdate, 
              data = fert)
ltx(fit, caption = "A simple Cox regression.")
@

The interpretation of the estimated regression coefficient is that the
birth intensity increases by 0.18 percent per year; not a very impressive
amount, but statistically \emph{very significant}, mostly due to the large
amount of births in our data. 
 
To forego some theory, we must add to this that the estimated standard
error and $p$-value are too optimistic. We need to do as follows (Table~\ref{tab:robust})
<<robust,results='asis'>>=
fit <- coxph(Surv(enter, exit, event > 0.5) ~ birthdate + 
                 cluster(id), data = fert)
xtable(summary(fit)$coef, digits = 3,caption="A simple Cox regression with robust standard errors.", label = "tab:robust")##$
@
which gives exactly the same parameter estimate as before, but a ``robust''
estimator of its standard error. The $p$-value is larger (because of
that), but still it shows statistical significance. 

\subsection{Internal covariates}

Internal covariates are covariates that vary with each individual. They are
typically \emph{time-varying}, and {\bf civst} is a typical example. The
``problem'' 
with internal covariates is that they may depend on the event status of the
process, even things that we cannot measure. It is necessary to be careful
when interpreting regression coefficients when internal covariates are
included in the model. 

We \emph{categorize} the variable {\bf birthdate} (for simpler exposition
in the following) and put the result in a new variable called {\bf period},
see Table~\ref{tab:period} for the distributions of births over \emph{sex}
and \emph{period}: 

<<period,results='asis'>>=
fert$period <- cut(fert$birthdate, c(1820, 1850, 1870), 
labels = c("first", "second"))
x <- with(fert[fert$event > 0.5, ], table(period, sex))
xtable(x, caption = "Period by sex.", label = "tab:period")
@ 

Then, an analysis with both {\bf period} and {\bf civst}, see 
Table~\ref{tab:cluster}.

<<cluster,results='asis'>>=
fit <- coxph(Surv(enter, exit, event > 0.5) ~ period + civst + 
                 cluster(id), data = fert)
xtable(summary(fit)$coef, digits = 3, caption="Cox regression with two covariates and robust standard errors.", label="tab:cluster")##$
@

What about the \emph{proportionality assumption}? Best is to look at it
graphically; first regarding {\bf period}, see Figure~\ref{fig:propass}. 

<<propass, fig.cap = "Log cumulative hazards for two time periods, adjusted for 'civil status'.">>=
fit1 <- coxph(Surv(enter, exit, event > 0.5) ~ strata(period) + 
                  civst, data = fert)
plot(survfit(fit1), mark.time = FALSE, fun = "cloglog", 
     col = c("red", "blue"), xlab = "Age")
@

On this scale (``cloglog''), the curves should have a constant \emph{absolute}
distance over time, if the \emph{PH} assumption holds. Disregarding the "random
fluctuations" before age 19 (or so), we see clearly that the two curves
converge, and the PH assumption is questionable. A formal test is
available ({\bf cox.zph}), see Table~\ref{tab:zph}: 

<<zph,results='asis'>>=
xxx <- xtable(cox.zph(fit1)$table, caption="Test of proportionality.", label = "tab:zph", digits  = 4)
print(xxx)
@ 

The null hypothesis is ``The PH assumption is TRUE'', and the $p$-value is
effectively zero, so it is safe to reject the PH hypothesis. However, from
the graph it looks as if the deviation is not that severe; remember that
the number of births is huge, so even small effects will be detected.  

Let us look at the graph with "natural" scales, see Figure~\ref{fig:natscale}.
<<natscale, fig.cap = "Cumulative hazards for two time periods, adjusted for 'civil status'.">>=
plot(survfit(fit1), mark.time = FALSE, fun = "cumhaz", 
     col = c("red", "blue"), xlim = c(15, 50), xlab = "Age", 
     ylab = "Cumulative hazards")
text(35, 2, "first period", col = "red")
text(30, 3.5, "second period", col = "blue")
abline(h = 0)
@
We would like to look at the \emph{hazard functions} (instead of the
\emph{cumulative} ones). For non-parametric estimators, this requires somewhat
complicated so-called \emph{kernel} methods. However, with this huge amount of
data, a flexible \emph{parametric} model is satisfactory; the \emph{piecewise
constant hazard model}. We split the time interval $(15, 50])$ into 35
  one-year-long sub-intervals and assume constant intensity within each
  sub-interval. Like this: 

<<strataper>>=
fit <- phreg(Surv(enter, exit, event > 0.5) ~ strata(period) + 
                 civst, data = fert, dist = "pch", cuts = 16:49)
##ltx(fit, caption = "Piecewise constant.")
fit
@ 

The figure looks like this, see Figure~\ref{fig:strataperplot}.

<<strataperplot,fig.cap="Hazard functions for two time periods, adjusted for 'civil status'.">>=
fit <- phreg(Surv(enter, exit, event > 0.5) ~ strata(period) + 
                 civst, data = fert, dist = "pch", cuts = 16:49)
plot(fit, fn = "haz", col = c("red", "blue"), 
     printLegend = FALSE, main = "",
     xlab = "Age", ylab = "Hazard functions")
legend("center", legend = c("first", "second"), 
       col = c("red", "blue"), lty = 1:2)
abline(h = 0)
@

Here the non-proportionality is easier to spot: The second period dominates
the low ages, while the first period takes over (more or less) in the high
ages. 

Now let us look at {\bf civst} in the same way, see Figure~\ref{fig:hazard}:

<<hazard, fig.cap="Hazard functions for married and unmarried, adjusted for 'period'.",echo=FALSE>>=
fit1 <- phreg(Surv(enter, exit, event > 0.5) ~ period + 
                  strata(civst), data = fert, 
              dist = "pch", cuts = 16:49)
##summary(fit1)
plot(fit1, fn = "haz", col = c("red", "blue"), 
     printLegend = FALSE, main = "",
     xlab = "Age", ylab = "Hazard functions")
legend("center", legend = c("married", "unmarried"), 
       col = c("red", "blue"), lty = 1:2)
abline(h = 0)
@

Not that easy to judge the PH assumption from this plot. A better idea is
to plot the \emph{ratio} between the two plots (Figure~\ref{fig:ratioplot}). 

<<ratioplot, fig.cap="The ratio between the hazards of delivery for unmarried and married.">>=
plot(15:49, fit1$hazards[2, ] / fit1$hazards[1, ], type = "l", 
     xlab = "Age", ylab = "Hazard ratio", ylim = c(0, 1))
abline(h = 0)
abline(h = exp(fit$coef[1]), col = "blue", lty = 2)
text(40, 0.3, "'PH estimate'", col = "blue")
text(21, 0.5, "'Reality'")
@

Clearly, and as expected, the relative frequency of "illegitimate" births
decreases with age, and the PH assumption is violated.  

\subsubsection{Dynamic covariates}

Finally, we define, as a subgroup of the internal covariates, \emph{dynamic}
covariates: They are direct functions of the history of the process $N(t)$
itself, for instance $N(t-)$, or 'time since last event', etc. In our data
set \emph{fert}, the variable {\bf parity} is exactly equal to $N(t-)$ for
$\text{enter} < t \le \text{exit}$. When including $N(t-)$ in the
definition of the hazard function, it is not necessary to use the 'robust'
standard errors, see Table~\ref{tab:dynamic}. 

<<dynamic,results='asis'>>=
fit1 <- coxph(Surv(enter, exit, event > 0.5) ~ parity + period, 
              data = fert)
xtable(summary(fit1)$coef, digits = 3, caption = "Cox regression with the dynamic covariate parity and the external covariate period.", label = "tab:dynamic")
@

Note how the inclusion of {\bf parity} deflates the importance of {\bf
  period}; without {\bf parity} we have (Table~\ref{tab:nodynam}),

<<nodynam,results='asis'>>=
fit <- coxph(Surv(enter, exit, event > 0.5) ~ period, 
             data = fert)
xtable(summary(fit)$coef, digits = 3, caption = "Cox regression with the external covariate period only.", label = "tab:nodynam")
@

There is a natural explanation to this: The covariate {\bf period} affects
$N(t)$, and then it is natural to think that this affection also is there
for earlier values of $N(t)$, and especially $N(t-)$, which in fact acts as
an \emph{intermediate} covariate and "steals" some of the effect from
{\bf period}. So, if we are interested primarily of the effect of {\bf period},
which of the two models should we choose? 

The answer to that question is probably the one \emph{without parity}; it
gives you the \emph{crude} (total) effect (think 'sum of the direct and indirect
effects'). 

The covariate {\bf parity} ($N(t-)$) catches the \emph{dynamics} of the
counting process $N(t)$, that is the dependence of its own past. This is a
way to interpret the \emph{dependence} between the lengths of successive birth
intervals for a woman: From the beginning (at age 15), all women have the
same probabilistic future regarding their paths of giving births. However,
by chance, some get the first child early, while others will have to wait
longer. If we assume that the intensity of giving birth is increased by 
\Sexpr{round(100 * fit1$coef[1])} per cent (as above), then the 'early-birds' will
immediately get an advantage in the probability of getting many children. 

In the following example I am simulating a counting process with a constant
intensity, but it is increased by 16 percent (or so) at each birth, similar
to the model above. Besides that, this is {\bf not} a realistic model for
fertility, but it is good enough (and simple!) to make a point. 

<<simN, echo=TRUE>>=
source("R/simN.R")
simN
set.seed(101001) ## So we get the same result every time!
x <- simN()
@

Note that only every tenth result is printed. The 100 simulated birth ages
are shown in Figure~\ref{fig:dishonest}. 

<<dishonest, fig.cap="A 'dishonest' birth process.">>=
plot(x$ages, rep(1, length(x$ages)), type = "b", col = "blue", 
     xlim = c(15, 50), xlab = "Age", ylab = "", axes = FALSE)
axis(1)
axis(2, at = 100)
lines(c(15, 50), c(1, 1))
box()
@

The process "chokes" between the ages 32 and 33. So what is happening? The
answer is that a model like 
\begin{equation}
h(t) = h_0(t) \exp\{\beta N(t-)\}, \quad t > 0
\end{equation}
is \emph{dishonest} if $\beta > 0$, meaning that it will \emph{explode} in
finite time with a positive probability (this is 'the point'). That is
exactly what happened in the example above. The problem is of course that
the intensity is \emph{exponentially increasing}, and that is 'too fast'
\citep{aalen08}.  

Is there a way out of this? Yes, in our fertility application, we know
there is a \emph{delay} immediately after each birth, say for nine months. That
is the argument {\bf wait} in the function {\bf simN}. Repeating the simulation
with the same 'seed' but with {\bf wait} = 0.75, we get, see Figure~\ref{fig:delays}.

<<waitsim>>=
set.seed(101001)
x <- simN(wait = 0.75)
@

<<delays, fig.cap = "A birth process with 'delay'.">>=
plot(x$ages, rep(1, length(x$ages)), type = "b", col = "blue", 
     xlim = c(15, 50), xlab = "Age", ylab = "", axes = FALSE)
axis(1)
axis(2, at = 100)
lines(c(15, 50), c(1, 1))
box()
@

This situation is similar to, but not equal to, the problem with a Geiger
counter having a "dead time", that is, after the arrival of an impulse, the
counter is locked for a (short) time period, and impulses arriving too soon
after another will not be counted. 

\subsection{Estimation allowing for delay}

Estimating the model with a nine month delay is straightforward; in
principle, add 0.75 to to the {\bf enter} covariate. Some exceptions must be
respected, though; the first intervals must be treated differently, and we
must look up for other intervals that are shorter than 0.75 (notably the
last). We introduce a new variable, {\bf enter1} (Table~\ref{tab:newenter}): 

<<newenter,results='asis'>>=
fert$enter1 <- ifelse(fert$parity > 0.5, 
                      pmin(fert$enter + 0.75, fert$exit - 0.001),
                      fert$enter)
## Checking ...
xtable(head(fert[, c("id", "parity", "enter", "enter1", "exit")]), 
       digits = 3, caption = "The new variable enter1.", label = "tab:newenter")
@

Looks OK (so far...). Let us rerun the above analysis with the "new" data;
the results are in Table~\ref{tab:newdata}.


<<newdata,results='asis'>>=
fit2 <- coxph(Surv(enter1, exit, event > 0.5) ~ parity + period, 
              data = fert)
xtable(summary(fit2)$coef, digits = 3, caption = "Cox regression with 'delay'.", label = "tab:newdata")
@

Looks like a huge difference! Let us put the coefficients from the two
analyses together in Table~\ref{tab:sametable} for easier comparison. 

<<sametable,results='asis'>>=
x <- cbind(exp(fit1$coef), exp(fit2$coef))
colnames(x) <- c("No delay", "Delay")
xtable(x, digits = 3, caption="Comparison of 'delay' and 'no delay'.",
label = "tab:sametable")
@

Quite a substantial change: The effect of {\bf parity} is much \emph{stronger},
while the effect of {\bf period} is \emph{weaker}. In
Figure~\ref{fig:crudehaz} we see how 
the crude hazard rate is affected by delay. We expect the delayed version
to have larger hazards, because the number of events is the same, but the
total exposure time is shorter. 

<<crudehaz, fig.cap = "Crude hazard rates, with and without delay.">>=
f <- phreg(Surv(enter, exit, event > 0.5) ~ 1, dist = "pch", cuts = 16:49, 
data = fert)
f1 <- phreg(Surv(enter1, exit, event > 0.5) ~ 1, dist = "pch", cuts = 16:49, 
            data = fert)
plot(15:49, f1$hazards[1, ], type = "s", col = "blue", xlab = "Age", ylab = "Hazards")
lines(15:49, f$hazards[1, ], type = "s", col = "red", lty = 2)
abline(h = 0)
legend("center", legend = c("Delay", "No delay"), col = c("blue", "red"), lty = 1:2)
@ 

Quite a substantial change in the "mid-ages".

\section{A frailty model approach}

The last results above concerning {\bf parity} are counterintuitive; I
would expect to see \emph{decreasing} intensity of having another child with
increasing parity. Maybe that effect is a consequence of the fact that this
group of women is very non-homogeneous beyond what we can measure with
covariates? If a subgroup of women have a very high fertility, then they
would reach higher parities than the other women, and therefore when we
observe a woman with a high parity, she probably belongs to the
high-fertility group and thus is expected to have a short 'next interval'.  

Since we cannot observe the factors that give rise to this in-homogeneity,
we apply a random-effects ("frailty") model. Conditionally on the random
effects, it is a PH model, but since we cannot observe the random effect,
it has to be integrated out. This results in a 'population model', i.e. an
average over the individuals. In {\bf R} we can use the function {\bf coxme}
from the package with the same name: 

<<coxme>>=
library(coxme)
fit <- coxme(Surv(enter1, exit, event > 0.5) ~ period + parity + (1 | id), 
data = fert)
fit
@ 

From the output it is clear that there is a very strong random effect
(women are different!). Note also that the fixed effect for {\bf parity} now
is still very strong, but {\bf in the opposite direction!} That is, the
direction our (my?) intuition says. 

\section{Stratification}

An alternative to the frailty model approach is to \emph{stratify} wrt {\bf
    id} (This old concept has lately been reinvented by economists, who
  call it a 'fixed effects model', thus redefining another old statistical
  term!). Note that we then \emph{must} change time scale from age to 'time
  since last event'. A case can be made for excluding the interval from 15
  to the first birth; we check both variants.   
We cannot have 'birthdate' or 'period' in the model, since they are
constant within each stratum (woman). 

<<strata, echo = TRUE>>=
fert$age <- fert$enter - 30
fert$age2 <- fert$age * fert$age
fit <- coxreg(Surv(exit - enter1, event > 0.5) ~ age + age2 +  
                  as.factor(parity) + strata(id), data = fert)
dr = drop1(fit, test = "Chisq")
@ 

(The warnings are due to very few observations with parity 15 and above.)

Note the definition of {\bf age}! Continuous covariates should
\emph{always} explicitly be \emph{centered}, especially if one wants to include
powers or interactions in the model. Note also that $\text{age2} = \text{age} *
\text{age}$. This function of age (a parabola) is not satisfactory, will be
dealt with in Part II.

The parameter estimates are shown in Table~\ref{tab:sumstrata}.
<<sumstrata,results='asis'>>=
##xtable(summary(fit)$coef, digits = 3, caption="Stratified Cox regression.", label = "tab:sumstrata")
ltx(fit, dr = dr, digits = 4, caption="Stratified Cox regression.", label = "tab:sumstrata")
@ 
And the \emph{parity} estimates are shown graphically in
Figure~\ref{fig:plotsumstrata}. 
<<plotsumstrata,fig.cap="The parity estimates.">>=
plot(0:16, c(0, fit$coef[-c(1, 2)]), type = "b", ylab = "Effect", xlab = "Parity")
@

Note that the effect of {\bf parity} is almost linear, \emph{except} for
the first and last parities. Regarding the last, only one woman reaches
parity 16 and gets a 17:th child. In order to "make it clean", her last
interval is removed: 

<<remove16, fig.cap="Effect of parity with last removed.">>=
fert <- fert[fert$parity < 15.5, ]
plot(0:15, c(0, fit$coef[-c(1, 2, 18)]), type = "b", ylab = "log(Effect)", xlab = "Parity")
@

Two conclusions can be drawn: 

\begin{enumerate}
\item The time from age 15 to the first birth should be analyzed separately,

\item Parity can otherwise safely be treated as a linear covariate.
\end{enumerate}
Let us do this.  Time to first birth in Table~\ref{tab:firstbirth},

<<firstbirth,results='asis'>>=
fit <- coxreg(Surv(enter, exit, event > 0.5) ~ period + civst, 
             data = fert[fert$parity < 0.5, ])
##xtable(summary(fit)$coef, digits = 3, caption="Time to first birth, Cox regression.", label = "tab:firstbirth")
ltx(fit, digits = 3, caption="Time to first birth, Cox regression (no stratification).", label = "tab:firstbirth")
@

Note that we here are back to pure survival analysis; no repeated events!
Checks of proportionality show nothing in particular. 

Then intervals from first birth and forward in age, Table~\ref{tab:restbirths}.

<<restbirths,results='asis'>>=
fert$age2 <- fert$age^2
fit <- coxreg(Surv(exit - enter1, event > 0.5) ~ age + age2 + 
                 parity + strata(id), 
             data = fert[fert$parity > 0.5, ])
##xtable(summary(fit)$coef, digits = 4, caption="From first birth to last.", label = "tab:restbirths")
ltx(fit, digits = 4, caption="From first birth to last, stratified Cox regression.", label = "tab:restbirths")
@

Both the effects of {\bf age} and {\bf parity} are highly significant; the
effects look like this (Figure~\ref{fig:figage}).

<<figage, fig.cap = "Relative effect of parity, controlled for mother's age. Relative effect of mother's age on fertility, controlled for parity. Reference age is 30.">>=
x <- seq(15, 50, length = 1000)
par(mfrow = c(1, 2))
y <- 0:14
plot(y, exp(fit$coef[3] * y), type = "b", xlab = "Parity", 
     ylab = "Effect", axes = FALSE, col = "blue")
axis(1, at = c(0, 4, 9), labels = c(1, 5, 10))
axis(2, at = c(0, 0.5, 1))
box()
abline(h = 0)
plot(x, exp((x - 30) * fit$coef[1] + (x - 30)^2 * fit$coef[2]), 
     xlab = "Age", ylab = "Effect", type = "l", axes = FALSE, 
     col = "blue")
axis(1, at = c(15, 30, 50))
axis(2, at = c(0, 0.5, 1.0, 1.4))
box()
abline(h = 0)
lines(c(14, 30), c(1, 1), lty = 2)
lines(c(30, 30), c(0, 1), lty = 2)
par(mfrow = c(1, 1))
@

\section{Conclusion}

It is \emph{absolutely necessary} to adjust for the ``unobserved 
heterogeneity'' between mothers.

(To be continued.)

\bibliography{surv.bib}

\end{document}
